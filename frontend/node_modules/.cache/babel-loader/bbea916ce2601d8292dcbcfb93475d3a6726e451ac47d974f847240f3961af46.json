{"ast":null,"code":"var _jsxFileName = \"/Users/mehmetatayurt/Desktop/Software/pomodoroapp/pomodoro-app/frontend/src/components/PomodoroTimer.jsx\",\n  _s = $RefreshSig$();\n// src/components/PomodoroTimer.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PomodoroTimer = () => {\n  _s();\n  // Durum (state) değişkenlerini tanımlıyoruz\n  const [time, setTime] = useState(1500); // 25 dakika (1500 saniye)\n  const [isActive, setIsActive] = useState(false); // Sayaç aktif mi değil mi\n  const [isBreak, setIsBreak] = useState(false); // Mola zamanı mı değil mi\n  const [workTime, setWorkTime] = useState(1500); // Çalışma süresi\n  const [breakTime, setBreakTime] = useState(300); // Mola süresi\n\n  useEffect(() => {\n    let interval = null;\n    if (isActive) {\n      // Sayaç aktifse, her saniyede bir zamanı azaltıyoruz\n      interval = setInterval(() => {\n        setTime(prevTime => prevTime - 1);\n      }, 1000);\n    } else if (!isActive && time !== 0) {\n      // Sayaç aktif değilse ve zaman 0 değilse, interval'i temizliyoruz\n      clearInterval(interval);\n    }\n    if (time === 0) {\n      // Zaman sıfırlandığında\n      if (isBreak) {\n        // Mola zamanıysa, çalışma süresine geçiyoruz\n        setTime(workTime);\n        setIsBreak(false);\n      } else {\n        // Çalışma zamanıysa, mola süresine geçiyoruz\n        setTime(breakTime);\n        setIsBreak(true);\n      }\n      playSound();\n    }\n    return () => clearInterval(interval); // Bileşen her güncellendiğinde interval'i temizliyoruz\n  }, [isActive, time, isBreak, workTime, breakTime]);\n  const playSound = () => {\n    const audio = new Audio('alarm_sound.mp3'); // Alarm sesi dosyasını çalıyoruz\n    audio.play();\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes}:${secs < 10 ? '0' : ''}${secs}`; // Zamanı dakika ve saniye formatında gösteriyoruz\n  };\n  const handleStartPause = () => {\n    setIsActive(!isActive); // Sayaç duraklatılıyor veya başlatılıyor\n  };\n  const handleReset = () => {\n    setIsActive(false); // Sayaç duraklatılıyor\n    setTime(workTime); // Zaman çalışma süresine sıfırlanıyor\n    setIsBreak(false); // Çalışma moduna geçiliyor\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isBreak ? 'Break Time' : 'Work Time'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: formatTime(time)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartPause,\n      children: isActive ? 'Pause' : 'Start'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(PomodoroTimer, \"uRBt+KQenjtC03SG5Z33KplE570=\");\n_c = PomodoroTimer;\nexport default PomodoroTimer;\nvar _c;\n$RefreshReg$(_c, \"PomodoroTimer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PomodoroTimer","_s","time","setTime","isActive","setIsActive","isBreak","setIsBreak","workTime","setWorkTime","breakTime","setBreakTime","interval","setInterval","prevTime","clearInterval","playSound","audio","Audio","play","formatTime","seconds","minutes","Math","floor","secs","handleStartPause","handleReset","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/mehmetatayurt/Desktop/Software/pomodoroapp/pomodoro-app/frontend/src/components/PomodoroTimer.jsx"],"sourcesContent":["// src/components/PomodoroTimer.js\nimport React, { useState, useEffect } from 'react';\n\nconst PomodoroTimer = () => {\n  // Durum (state) değişkenlerini tanımlıyoruz\n  const [time, setTime] = useState(1500); // 25 dakika (1500 saniye)\n  const [isActive, setIsActive] = useState(false); // Sayaç aktif mi değil mi\n  const [isBreak, setIsBreak] = useState(false); // Mola zamanı mı değil mi\n  const [workTime, setWorkTime] = useState(1500); // Çalışma süresi\n  const [breakTime, setBreakTime] = useState(300); // Mola süresi\n\n  useEffect(() => {\n    let interval = null;\n\n    if (isActive) {\n      // Sayaç aktifse, her saniyede bir zamanı azaltıyoruz\n      interval = setInterval(() => {\n        setTime((prevTime) => prevTime - 1);\n      }, 1000);\n    } else if (!isActive && time !== 0) {\n      // Sayaç aktif değilse ve zaman 0 değilse, interval'i temizliyoruz\n      clearInterval(interval);\n    }\n\n    if (time === 0) {\n      // Zaman sıfırlandığında\n      if (isBreak) {\n        // Mola zamanıysa, çalışma süresine geçiyoruz\n        setTime(workTime);\n        setIsBreak(false);\n      } else {\n        // Çalışma zamanıysa, mola süresine geçiyoruz\n        setTime(breakTime);\n        setIsBreak(true);\n      }\n      playSound();\n    }\n\n    return () => clearInterval(interval); // Bileşen her güncellendiğinde interval'i temizliyoruz\n  }, [isActive, time, isBreak, workTime, breakTime]);\n\n  const playSound = () => {\n    const audio = new Audio('alarm_sound.mp3'); // Alarm sesi dosyasını çalıyoruz\n    audio.play();\n  };\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes}:${secs < 10 ? '0' : ''}${secs}`; // Zamanı dakika ve saniye formatında gösteriyoruz\n  };\n\n  const handleStartPause = () => {\n    setIsActive(!isActive); // Sayaç duraklatılıyor veya başlatılıyor\n  };\n\n  const handleReset = () => {\n    setIsActive(false); // Sayaç duraklatılıyor\n    setTime(workTime); // Zaman çalışma süresine sıfırlanıyor\n    setIsBreak(false); // Çalışma moduna geçiliyor\n  };\n\n  return (\n    <div>\n      <h1>{isBreak ? 'Break Time' : 'Work Time'}</h1>\n      <div>{formatTime(time)}</div>\n      <button onClick={handleStartPause}>{isActive ? 'Pause' : 'Start'}</button>\n      <button onClick={handleReset}>Reset</button>\n    </div>\n  );\n};\n\nexport default PomodoroTimer;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACjD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAChD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;;EAEjDC,SAAS,CAAC,MAAM;IACd,IAAIe,QAAQ,GAAG,IAAI;IAEnB,IAAIR,QAAQ,EAAE;MACZ;MACAQ,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC3BV,OAAO,CAAEW,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;MACrC,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM,IAAI,CAACV,QAAQ,IAAIF,IAAI,KAAK,CAAC,EAAE;MAClC;MACAa,aAAa,CAACH,QAAQ,CAAC;IACzB;IAEA,IAAIV,IAAI,KAAK,CAAC,EAAE;MACd;MACA,IAAII,OAAO,EAAE;QACX;QACAH,OAAO,CAACK,QAAQ,CAAC;QACjBD,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,MAAM;QACL;QACAJ,OAAO,CAACO,SAAS,CAAC;QAClBH,UAAU,CAAC,IAAI,CAAC;MAClB;MACAS,SAAS,CAAC,CAAC;IACb;IAEA,OAAO,MAAMD,aAAa,CAACH,QAAQ,CAAC,CAAC,CAAC;EACxC,CAAC,EAAE,CAACR,QAAQ,EAAEF,IAAI,EAAEI,OAAO,EAAEE,QAAQ,EAAEE,SAAS,CAAC,CAAC;EAElD,MAAMM,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC;IAC5CD,KAAK,CAACE,IAAI,CAAC,CAAC;EACd,CAAC;EAED,MAAMC,UAAU,GAAIC,OAAO,IAAK;IAC9B,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,EAAE,CAAC;IACxC,MAAMI,IAAI,GAAGJ,OAAO,GAAG,EAAE;IACzB,OAAO,GAAGC,OAAO,IAAIG,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAGA,IAAI,EAAE,CAAC,CAAC;EACtD,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BrB,WAAW,CAAC,CAACD,QAAQ,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMuB,WAAW,GAAGA,CAAA,KAAM;IACxBtB,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;IACpBF,OAAO,CAACK,QAAQ,CAAC,CAAC,CAAC;IACnBD,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;EACrB,CAAC;EAED,oBACER,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAA6B,QAAA,EAAKtB,OAAO,GAAG,YAAY,GAAG;IAAW;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC/CjC,OAAA;MAAA6B,QAAA,EAAMR,UAAU,CAAClB,IAAI;IAAC;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC7BjC,OAAA;MAAQkC,OAAO,EAAEP,gBAAiB;MAAAE,QAAA,EAAExB,QAAQ,GAAG,OAAO,GAAG;IAAO;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAC1EjC,OAAA;MAAQkC,OAAO,EAAEN,WAAY;MAAAC,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAnEID,aAAa;AAAAkC,EAAA,GAAblC,aAAa;AAqEnB,eAAeA,aAAa;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}