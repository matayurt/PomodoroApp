{"ast":null,"code":"// src/components/PomodoroTimer.js\nimport React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import\"../main.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PomodoroTimer=_ref=>{let{workTime,breakTime}=_ref;// Durum (state) değişkenlerini tanımlıyoruz\nconst[time,setTime]=useState(workTime);const[isActive,setIsActive]=useState(false);// Sayaç aktif mi değil mi\nconst[isBreak,setIsBreak]=useState(false);// Mola zamanı mı değil mi\nuseEffect(()=>{setTime(workTime);// workTime prop değiştiğinde zamanlayıcıyı güncelle\n},[workTime]);useEffect(()=>{let interval=null;if(isActive){// Sayaç aktifse, her saniyede bir zamanı azaltıyoruz\ninterval=setInterval(()=>{setTime(prevTime=>prevTime-1);},1000);}else if(!isActive&&time!==0){// Sayaç aktif değilse ve zaman 0 değilse, interval'i temizliyoruz\nclearInterval(interval);}if(time===0){// Zaman sıfırlandığında\nif(isBreak){// Mola zamanıysa, çalışma süresine geçiyoruz\nsetTime(workTime);setIsBreak(false);}else{// Çalışma zamanıysa, mola süresine geçiyoruz\nsetTime(breakTime);setIsBreak(true);}playSound();}return()=>clearInterval(interval);// Bileşen her güncellendiğinde interval'i temizliyoruz\n},[isActive,time,isBreak,workTime,breakTime]);const playSound=()=>{const audio=new Audio('alarm_sound.mp3');// Alarm sesi dosyasını çalıyoruz\naudio.play();};const playSound2=()=>{const audio=new Audio('click_sound.mp3');audio.play();};const formatTime=seconds=>{const minutes=Math.floor(seconds/60);const secs=seconds%60;return\"\".concat(minutes,\":\").concat(secs<10?'0':'').concat(secs);// Zamanı dakika ve saniye formatında gösteriyoruz\n};const handleStartPause=()=>{playSound2();setIsActive(!isActive);// Sayaç duraklatılıyor veya başlatılıyor\n};const handleReset=()=>{playSound2();setIsActive(false);// Sayaç duraklatılıyor\nsetTime(workTime);// Zaman çalışma süresine sıfırlanıyor\nsetIsBreak(false);// Çalışma moduna geçiliyor\n};const handleToggleMode=()=>{playSound2();if(isBreak){setIsBreak(false);setTime(workTime);}else{setIsBreak(true);setTime(breakTime);}setIsActive(false);// Mod değiştirirken sayaç duraklatılır.\n};return/*#__PURE__*/_jsx(\"div\",{className:\"center\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:isBreak?'Break Time':'Work Time'}),/*#__PURE__*/_jsx(\"div\",{className:\"timer\",children:formatTime(time)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleStartPause,className:\"button\",children:isActive?'Pause':'Start'}),/*#__PURE__*/_jsx(\"button\",{onClick:handleReset,className:\"button\",children:\"Reset\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleToggleMode,className:\"button\",children:isBreak?'Switch to Work':'Switch to Break'}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Link,{to:\"/settings\",children:/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:playSound2,children:\"Settings\"})})]})});};export default PomodoroTimer;","map":{"version":3,"names":["React","useState","useEffect","Link","jsx","_jsx","jsxs","_jsxs","PomodoroTimer","_ref","workTime","breakTime","time","setTime","isActive","setIsActive","isBreak","setIsBreak","interval","setInterval","prevTime","clearInterval","playSound","audio","Audio","play","playSound2","formatTime","seconds","minutes","Math","floor","secs","concat","handleStartPause","handleReset","handleToggleMode","className","children","onClick","to"],"sources":["/Users/mehmetatayurt/Desktop/Software/pomodoroapp/pomodoro-app/frontend/src/components/PomodoroTimer.jsx"],"sourcesContent":["// src/components/PomodoroTimer.js\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport \"../main.css\"\n\nconst PomodoroTimer = ({ workTime, breakTime }) => {\n  // Durum (state) değişkenlerini tanımlıyoruz\n  const [time, setTime] = useState(workTime);\n  const [isActive, setIsActive] = useState(false); // Sayaç aktif mi değil mi\n  const [isBreak, setIsBreak] = useState(false); // Mola zamanı mı değil mi\n\n  useEffect(() => {\n    setTime(workTime); // workTime prop değiştiğinde zamanlayıcıyı güncelle\n  }, [workTime]);\n\n\n  useEffect(() => {\n    let interval = null;\n\n    if (isActive) {\n      // Sayaç aktifse, her saniyede bir zamanı azaltıyoruz\n      interval = setInterval(() => {\n        setTime((prevTime) => prevTime - 1);\n      }, 1000);\n    } else if (!isActive && time !== 0) {\n      // Sayaç aktif değilse ve zaman 0 değilse, interval'i temizliyoruz\n      clearInterval(interval);\n    }\n\n    if (time === 0) {\n      // Zaman sıfırlandığında\n      if (isBreak) {\n        // Mola zamanıysa, çalışma süresine geçiyoruz\n        setTime(workTime);\n        setIsBreak(false);\n      } else {\n        // Çalışma zamanıysa, mola süresine geçiyoruz\n        setTime(breakTime);\n        setIsBreak(true);\n      }\n      playSound();\n    }\n\n    return () => clearInterval(interval); // Bileşen her güncellendiğinde interval'i temizliyoruz\n  }, [isActive, time, isBreak, workTime, breakTime]);\n\n  const playSound = () => {\n    const audio = new Audio('alarm_sound.mp3'); // Alarm sesi dosyasını çalıyoruz\n    audio.play();\n  };\n\n  const playSound2 = () => {\n    const audio = new Audio('click_sound.mp3');\n    audio.play()\n  }\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes}:${secs < 10 ? '0' : ''}${secs}`; // Zamanı dakika ve saniye formatında gösteriyoruz\n  };\n\n  const handleStartPause = () => {\n    playSound2()\n    setIsActive(!isActive); // Sayaç duraklatılıyor veya başlatılıyor\n  };\n\n  const handleReset = () => {\n    playSound2()\n    setIsActive(false); // Sayaç duraklatılıyor\n    setTime(workTime); // Zaman çalışma süresine sıfırlanıyor\n    setIsBreak(false); // Çalışma moduna geçiliyor\n  };\n\n  const handleToggleMode = () => {\n    playSound2()\n    if (isBreak) {\n      setIsBreak(false)\n      setTime(workTime)\n    }else {\n      setIsBreak(true)\n      setTime(breakTime)\n    }\n    setIsActive(false) // Mod değiştirirken sayaç duraklatılır.\n  }\n\n  return (\n    <div className='center'>\n      <div>\n        <h1>{isBreak ? 'Break Time' : 'Work Time'}</h1>\n        <div className='timer'>{formatTime(time)}</div>\n        <button onClick={handleStartPause} className='button'>{isActive ? 'Pause' : 'Start'}</button>\n        <button onClick={handleReset} className='button'>Reset</button>\n        <button onClick={handleToggleMode} className='button'>{isBreak ? 'Switch to Work' : 'Switch to Break'}</button>\n        <br />\n        <Link to=\"/settings\">\n          <button className='button' onClick={playSound2}>Settings</button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default PomodoroTimer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}